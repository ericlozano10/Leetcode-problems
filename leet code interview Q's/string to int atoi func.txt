import math


class Solution:
        def myAtoi(self, s: str) -> int:

                # gets rid of any extra whitespaces
                s = s.lstrip()

                if(s is None or len(s) < 1):
                        return 0


                #counter for flags
                i = 0

                #checks that its in range from [-2^31, 2^31 - 1]
                MIN = -2147483648
                MAX = 2147483647

                #flas for wheter negative or positive
                isPositive = len(s) > 1 and s[0] == '+'
                isNegative = len(s) > 1 and s[0] == '-'

                if(isPositive):
                        i += 1
                elif(isNegative):
                        i += 1

                #store converted number
                number = 0

                while i < len(s) and '0' <= s[i] <= '9':
                        if not s[i].isdigit():
                                break
                        number = number * 10 + (ord(s[i]) - ord('0'))
                        i += 1
                if isNegative:
                        number = -number

                if number < MIN:
                        return MIN
                if number > MAX:
                        return MAX

                return number
s = Solution()
res = s.myAtoi("                     -42")
print(f'res: {res}')